name: Update Repository Structure
on:
  push:
    branches: [ main ]
    paths-ignore:
      - 'repository-structure.md'
  workflow_dispatch: 
jobs:
  update-structure:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.REPO_STRUCTURE_PAT }}
      
      - name: Setup Git Identity
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
      
      - name: Install tree
        run: sudo apt-get install -y tree
      
      - name: Generate Repository Structure with Links
        run: |
          # Create a python script to process the tree output and add markdown links
          cat > create_tree_with_links.py << 'EOF'
          import os
          import re
          import subprocess
          
          # Get repository information
          repo = os.environ['GITHUB_REPOSITORY']
          repo_url = f"https://github.com/{repo}/blob/main/"
          
          # Create the output file
          with open('repository-structure.md', 'w') as f:
              f.write("# Repository Structure\n\n")
          
          # Run tree and capture its output
          tree_process = subprocess.run(
              ["tree", "-I", ".git|.github", "--noreport"], 
              capture_output=True, 
              text=True
          )
          tree_output = tree_process.stdout
          
          # Process the tree output line by line
          current_dirs = []
          result_lines = []
          
          for line in tree_output.split('\n'):
              if not line.strip():
                  continue
              
              # Check if this is the root directory line
              if not line.startswith('│') and not line.startswith('├') and not line.startswith('└'):
                  result_lines.append(f"```\n{line}\n```")
                  if line.endswith(':'):
                      current_dirs = [line[:-1]]
                  continue
              
              # Extract the indent part and the content part
              match = re.match(r'^(.*?)([^│├└─┬┼\s].*)$', line)
              if not match:
                  result_lines.append(f"```\n{line}\n```")
                  continue
                  
              indent, content = match.groups()
              
              # Determine depth based on indent structure
              depth = indent.count('├') + indent.count('└')
              current_dirs = current_dirs[:depth]
              
              # If it's a directory (ends with a colon)
              if content.endswith(':'):
                  dir_name = content[:-1]
                  current_dirs.append(dir_name)
                  result_lines.append(f"```\n{indent}{dir_name}:\n```")
              else:
                  # It's a file, create a markdown link
                  file_path = '/'.join(filter(None, current_dirs + [content]))
                  result_lines.append(f"```\n{indent}```[{content}]({repo_url}{file_path})")
          
          # Write the processed lines to the repository-structure.md file
          with open('repository-structure.md', 'a') as f:
              f.write('\n'.join(result_lines))
          EOF
          
          # Execute the Python script
          python3 create_tree_with_links.py
          
      - name: Commit and Push if changed
        run: |
          if git diff --exit-code repository-structure.md; then
            echo "No changes to repository-structure.md"
          else
            git add repository-structure.md
            git commit -m "automatic update"
            # Use elevated permissions for pushing
            git remote set-url origin https://x-access-token:${{ secrets.REPO_STRUCTURE_PAT }}@github.com/${{ github.repository }}
            git push
          fi
