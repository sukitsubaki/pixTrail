name: Update Repository Structure
on:
  push:
    branches: [ main ]
    paths-ignore:
      - 'repository-structure.md'
  workflow_dispatch: 
jobs:
  update-structure:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.REPO_STRUCTURE_PAT }}
      
      - name: Setup Git Identity
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
      
      - name: Install tree
        run: sudo apt-get install -y tree
      
      - name: Generate Repository Structure
        run: |
          # Start with Markdown code block and repository name
          echo '```' > repository-structure.md
          echo "sukitsubaki/pixTrail/" >> repository-structure.md
          
          # Create a Python script to process the tree output
          cat > sort_tree.py << 'EOF'
          import sys
          import re
          
          def is_directory(line):
              # Check if the line represents a directory (ends with '/')
              # After stripping the line ending and trailing spaces
              content = re.sub(r'^.*[└├]── ', '', line.rstrip())
              return content.endswith('/')
          
          def get_level(line):
              # Count the indentation level based on │ characters
              return line.count('│')
          
          def get_name(line):
              # Extract the name of the file or directory
              name = re.sub(r'^.*[└├]── ', '', line.rstrip())
              return name
          
          # Read the tree output (skip the first line which is the root)
          lines = sys.stdin.readlines()[1:]
          
          # Group lines by their parent directory
          directory_map = {}
          current_path = []
          
          for line in lines:
              level = get_level(line)
              
              # Adjust the current path based on the level
              current_path = current_path[:level]
              
              # Get parent path
              parent_path = '/'.join(current_path) if current_path else ''
              
              # Add to directory map
              if parent_path not in directory_map:
                  directory_map[parent_path] = []
              
              directory_map[parent_path].append(line)
              
              # If this is a directory, add it to the current path
              if is_directory(line):
                  name = get_name(line).rstrip('/')
                  current_path.append(name)
          
          # Sort each level - files first, then directories
          for parent, items in directory_map.items():
              files = [item for item in items if not is_directory(item)]
              dirs = [item for item in items if is_directory(item)]
              
              # Sort each group alphabetically
              files.sort(key=lambda x: get_name(x).lower())
              dirs.sort(key=lambda x: get_name(x).lower())
              
              # Replace the items with the sorted ones
              directory_map[parent] = files + dirs
          
          # Output the root line
          print(sys.stdin.readline().rstrip())
          
          # Process the tree in a depth-first manner
          def print_tree(path=''):
              if path in directory_map:
                  for line in directory_map[path]:
                      print(line.rstrip())
                      
                      # If it's a directory, process its children
                      if is_directory(line):
                          name = get_name(line).rstrip('/')
                          child_path = f"{path}/{name}" if path else name
                          print_tree(child_path)
          
          print_tree()
          EOF
          
          # Generate tree and pipe it through the Python script
          tree -I ".git|.github|repository-structure.md" --noreport -C | python3 sort_tree.py >> repository-structure.md
          
          # Close the Markdown code block
          echo '```' >> repository-structure.md
          
      - name: Commit and Push if changed
        run: |
          if git diff --exit-code repository-structure.md; then
            echo "No changes to repository-structure.md"
          else
            git add repository-structure.md
            git commit -m "automatic update on push"
            # Use elevated permissions for pushing
            git remote set-url origin https://x-access-token:${{ secrets.REPO_STRUCTURE_PAT }}@github.com/${{ github.repository }}
            git push
          fi
